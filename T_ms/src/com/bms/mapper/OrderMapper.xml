<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace和定义的Mapper接口对应，并实现其中的方法 -->
<mapper namespace="com.bms.mapper.OrderMapper">

	<insert id="addOrder" parameterType="com.bms.model.OrdersModel">
	insert into
	orders(orderid,ordernum,menuid,userid,message,totalprice,time,paystate,mastate,privilege,freight,merid,melist,paymet,addresssid)
	values(#{orderid},#{ordernum},#{menuid},#{userid},#{message},#{totalprice},#{time},#{paystate},#{mastate},#{privilege},#{freight}
	,#{merid},#{melist},#{paymet},#{addresssid})
    </insert>
    
    <delete id="deleteOrder" parameterType="com.bms.model.OrdersModel">
     delete from orders  where id = #{id}
  	</delete>
  	<delete id="deleteById" parameterType="com.bms.model.OrdersModel">
     delete from orders  where orderid = #{orderid}
  	</delete>
  	<select id="findAll" resultType="com.bms.model.OrdersModel">
  	select * from orders 
  	</select>
  	<!--  -->
  	<select id="listByPage" resultType="com.bms.model.OrdersModel" parameterType="java.util.Map">
  		select * from orders where userid = #{userid} limit #{pageNo}, #{pageSize}
  	</select>
  	<select id="getTotal" resultType="java.lang.Long" parameterType="java.util.Map">
  		select count(*) from orders where userid = #{userid} 
  	</select>
  	<update id="updateOrder" parameterType="com.bms.model.OrdersModel">
  		update orders set password = #{password} where id = #{id}
  	</update>
  	 <update id="updatePayState" parameterType="java.util.Map">
  		update orders set paystate = #{paystate} where ordernum = #{ordernum}
  	</update>
  	<update id="updateMastate" parameterType="java.util.Map">
  		update orders set mastate = #{mastate} where ordernum = #{ordernum}
  	</update>

  	<!-- 出入多个参数模糊查询 -->
  	<select id="listBySearch" resultType="com.bms.model.OrdersModel" parameterType="java.util.Map">
  		select * from orders where 1 = 1
  		<if test="ordernum != null">
  		 and ordernum like '%${ordernum}%'
  		</if>
  		<if test="time != null">
  		 and time like '%${time}%'
  		</if>
  		<if test="userid != null">
  		 and userid = ${userid}
  		</if>
  		<if test="mastate != null">
  		 and mastate = '${mastate}'
  		</if>
  	</select>
  	<!-- 按条件查询出的条数 -->
  	<select id="getTotalBySearch" resultType="java.lang.Long" parameterType = "java.util.Map">
  		select count(*) from user where 1=1 
  		<if test="searchType == 'phonenum'">
  		and phonenum like '%${searchField}%'
  		</if> 
  		
  	</select>
  	<!-- 查询登录 -->
  	<select id="findByOrder" resultType="com.bms.model.OrdersModel" parameterType="java.util.Map">
  	select * from orders where username = #{username} and password = #{password}
  	</select>
  

  <!-- 
  <select id="getUserByUsername" parameterType="string" resultType="com.huawei.nser.standard.dao.User">
     select msisdn,sub_id,pwd password,to_char(active_time,'yyyymmdd') activate_time from ec_user where msisdn=#{msisdn} 
  </select>
  
  
   <insert id="addUser" parameterType="com.huawei.nser.standard.values.ECUserValue">
       insert into ec_user(msisdn, sub_id, pwd, active_time,remark) values(#{msisdn}, #{sub_id}, #{pwd}, #{active_time},#{remark})
  </insert>

  
   <update id="setUserPassword" parameterType="com.huawei.nser.standard.dao.User">
   　　　update ec_user set pwd = #{password} where msisdn=#{msisdn}
  </update>  
  
   <delete id="delLogincheck" parameterType="com.huawei.nser.standard.values.LoginCheckPO">
     delete from ec_sys_logincheck  where login_number = #{login_number} and checktype= #{checktype}
  </delete>
  
  -->
    
</mapper>

